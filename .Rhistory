devtools::document()
devtools::test()
usethis::use_package("ggplot2")
devtools::document()
devtools::test()
local_gapminder <- na.omit(my_gapminder)
result <- my_lm(local_gapminder, lifeExp ~ gdpPercap + continent)
print(result)
result
mod_fits <- fitted(my_lm)
?fitted
actual <- my_penguins$species
prediction_values <- my_penguins[["bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm"]]
actual <- my_penguins$species
prediction_values <- my_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
prediction_values
x <- table()
x <- table(c(1, 2, 3, 4
))
x
append(x, c(5, 6, 7, 8))
as.data.frame(x)
append(as.data.frame(x), c(12, 13, 12, 11))
x <- matrix(nrow =10, ncol = 2)
x
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 2)
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
print(result)
}
results
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 2)
colnames(results) <- c("Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
print(result)
}
results
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 2)
colnames(results) <- c("Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- mean(actual == result$class)
results[i, 2] <- result$cv_error
}
results
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 2)
colnames(results) <- c("Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- mean(actual != result$class)
results[i, 2] <- result$cv_error
}
results
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 2)
colnames(results) <- c("Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- mean(actual != result$class)
results[i, 2] <- result$cv_error
}
as.table(results)
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 3)
colnames(results) <- c("Nearest Neighbors", "Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- i
results[i, 2] <- mean(actual != result$class)
results[i, 3] <- result$cv_error
}
as.table(results)
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 3)
colnames(results) <- c("Nearest Neighbors", "Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- integer(i)
results[i, 2] <- mean(actual != result$class)
results[i, 3] <- result$cv_error
}
local_penguins <- na.omit(my_penguins)
actual <- local_penguins$species
prediction_values <- local_penguins[c("bill_length_mm", "bill_depth_mm",
"body_mass_g", "flipper_length_mm")]
results <- matrix(nrow = 10, ncol = 3)
colnames(results) <- c("Nearest Neighbors", "Training Error", "CV Misclassification")
for (i in 1:10) {
result <- my_knn_cv(prediction_values, actual, i, 5)
results[i, 1] <- i
results[i, 2] <- mean(actual != result$class)
results[i, 3] <- result$cv_error
}
as.table(results)
k <- vector(c(1, 2, 3))
k <- vector(mode = numeric, length = 3)
k <- c(2, 5, 10)
k
k[1]
result <- matrix(nrow = 30, ncol = 3)
colnames(result) <- k
result
k <- c(2, 5, 10)
result <- matrix(nrow = 30, ncol = 3)
colnames(result) <- k
for (i in 1:3) {
for (j in 1:30) {
result[j, i] <- my_rf_cv(i)
}
}
k <- c(3, 5, 10)
result <- matrix(nrow = 30, ncol = 3)
colnames(result) <- k
for (i in 1:3) {
for (j in 1:30) {
result[j, i] <- my_rf_cv(i)
}
}
my_rf_cv(5)
my_rf_cv(10)
my_rf_cv(4)
my_rf_cv(2)
k <- c(3, 5, 10)
result <- matrix(nrow = 30, ncol = 3)
colnames(result) <- k
for (i in 1:3) {
for (j in 1:30) {
result[j, i] <- my_rf_cv(k[i])
}
}
boxplot(result)
result <- as.data.frame(result)
result <- as.data.frame(result)
result
k <- c(2, 5, 10)
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("number of folds", "cv error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) * j, 1] <- k[i]
result[(30) * (i - 1) * j, 2] <- my_rf_cv(k[i])
}
}
k <- c(2, 5, 10)
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("number of folds", "cv error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) + j, 1] <- k[i]
result[(30) * (i - 1) + j, 2] <- my_rf_cv(k[i])
}
}
result <- as.data.frame(result)
ggplot2::ggplot(result, aes(x = "number of folds", y = "cv error"))
ggplot2::ggplot(result, ggplot2::aes(x = "number of folds", y = "cv error")) +
ggplot2::geom_boxplot()
result
result$`number of folds`
ggplot(result, aes(x = "number of folds", y = "cv error")) + geom_boxplot()
library(ggplot2)
k <- c(2, 5, 10)
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("number of folds", "cv error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) + j, 1] <- k[i]
result[(30) * (i - 1) + j, 2] <- my_rf_cv(k[i])
}
}
result <- as.data.frame(result)
ggplot(result, aes(x = "number of folds", y = "cv error")) +
geom_boxplot()
ggplot(result, aes(x = "number of folds", y = "cv error")) +
+   geom_boxplot()
ggplot(result, aes(x = "number of folds", y = "cv error")) +geom_boxplot()
ggplot(result, aes(x = "number of folds", y = "cv error")) +geom_line()
result$`cv error`
result
library(ggplot2)
k <- c(2, 5, 10)
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("n_folds", "cv_error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) + j, 1] <- k[i]
result[(30) * (i - 1) + j, 2] <- my_rf_cv(k[i])
}
}
result <- as.data.frame(result)
result
result$n_folds
result$n_folds[1:10]
ggplot(result, aes(x=n_folds, y=cv_erorr))
ggplot(result, aes(x=n_folds, y=cv_error
))
ggplot(result, aes(x=n_folds, y=cv_error
)) + geom_boxplot()
ggplot(result, aes(x=n_folds, y=cv_error, grouping(n_folds))) + geom_boxplot()
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds)) + geom_boxplot()
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds))
+ geom_boxplot() +
labs(title = "Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds)) + geom_boxplot() + labs(title = "Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds))
+ geom_boxplot() +
labs(title = "Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds))
+ geom_boxplot()
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error, group = n_folds)) + geom_boxplot()
+ labs(title = "Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i]]
result_stats[1, i] <- mean(results_of_specific_k)
result_stats[2, i] <- mean(results_of_specific_k)
}
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i]]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- mean(results_of_specific_k)
}
result_stats
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[n_folds == k[i]]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result["n_folds" == k[i]]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result_stats
result$n_folds == k[1]
result[result$n_folds == k[1]]
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], ]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
slice = result$n_folds == k[i]
slice
result[slice, 1]
result[slice, ]
result[result$n_folds == k[i], ]
result[result$n_folds == k[1], ]
result[result$n_folds == k[2], ]
result[result$n_folds == k[3], ]
result[result$n_folds == k[3], 2]
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
library(ggplot2)
k <- c(2, 5, 10)
k_string <- c("2", "5", "10")
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("n_folds", "cv_error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) + j, 1] <- k_string[i]
result[(30) * (i - 1) + j, 2] <- my_rf_cv(k[i])
}
}
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
library(ggplot2)
k <- c(2, 5, 10)
result <- matrix(nrow = 90, ncol = 2)
colnames(result) <- c("n_folds", "cv_error")
for (i in 1:3) {
for (j in 1:30) {
result[(30) * (i - 1) + j, 1] <- k[i]
result[(30) * (i - 1) + j, 2] <- my_rf_cv(k[i])
}
}
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
as.table(result)
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
as.data.frame(result)
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
as.table(result_stats)
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
as.tibble(as.table(result_stats))
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
(as.table(result_stats))
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
rownames(result_stats) <- c("k = 2", "k = 5", "k = 10")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
(as.table(result_stats))
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
rownames(result_stats) <- c("k = 2", "k = 5", "k = 10")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
tibble(as.table(result_stats))
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
rownames(result_stats) <- c("k = 2", "k = 5", "k = 10")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result_stats <- tibble(as.table(result_stats))
result_stats
result_stats
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
rownames(result_stats) <- c("k = 2", "k = 5", "k = 10")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result_stats <- (as.table(result_stats))
result_stats
result <- as.data.frame(result)
ggplot(result, aes(x=n_folds, y=cv_error,
group = n_folds)) + geom_boxplot() + labs(title =
"Random Forest with 5-fold Cross validation",
x = "Number of folds", y = "Mean Squared CV Error")
result_stats <- matrix(nrow = 3, ncol = 2)
colnames(result_stats) <- c("mean", "standard deviation")
rownames(result_stats) <- c("k = 2", "k = 5", "k = 10")
for (i in 1:3) {
results_of_specific_k <- result[result$n_folds == k[i], 2]
result_stats[i, 1] <- mean(results_of_specific_k)
result_stats[i, 2] <- sd(results_of_specific_k)
}
result_stats <- (as.table(result_stats))
result_stats
devtools::document()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::install_github("Codax2000/mypackage")
